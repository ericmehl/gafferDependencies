From bac8850e7b9c2fe19085c604ab835483a1459512 Mon Sep 17 00:00:00 2001
From: Eric Mehl <eric@thinkhypothetical.com>
Date: Thu, 10 Mar 2022 13:00:47 -0500
Subject: [PATCH] Windows build options : HQ 5.0 / Windows 6.0 compatibility

- Dependencies now use simplified Boost packaging in https://github.com/hypothetical-inc/gafferDependencies/releases/tag/5.0.0, making the file and directory names less verbose.
- Move `CXXFLAGS` into `SConstruct`. It's not possible to set a list value from a batch script, which is what the dependencies project uses to build Cortex. Also these flags are required, so this move makes them less prone to being left out.
- USD 21.11 prefixes libraries with `usd_`
---
 .github/workflows/main/options.windows | 14 ++++----------
 SConstruct                             | 10 +++++++++-
 2 files changed, 13 insertions(+), 11 deletions(-)

diff --git a/.github/workflows/main/options.windows b/.github/workflows/main/options.windows
index 1b809920b..881c8f52e 100644
--- a/.github/workflows/main/options.windows
+++ b/.github/workflows/main/options.windows
@@ -13,14 +13,6 @@ INSTALL_RMANDISPLAY_NAME = build + "\\renderMan\\displayDrivers\\ieDisplay"
 INSTALL_PYTHON_DIR = build + "\\python"
 INSTALL_IECORE_OPS = ""
 
-# disable permissive mode, making MSVC more standards compliant
-# /D_USE_MATH_DEFINES is needed with permissive mode off for
-# common definitions like M_P
-# /Zc:externC- fixes a compilation error with Boost::interprocess
-# described here:
-# https://developercommunity.visualstudio.com/content/problem/756694/including-windowsh-and-boostinterprocess-headers-l.html
-CXXFLAGS = ["/permissive-", "/D_USE_MATH_DEFINES", "/Zc:externC-"]
-
 LIBPATH = libs
 
 PYTHON = deps + "\\bin\\python"
@@ -33,8 +25,9 @@ PYTHONPATH = deps + "\\python"
 # Libs
 # ====
 
-BOOST_INCLUDE_PATH = includes + "\\boost-1_68"
-BOOST_LIB_SUFFIX = "-vc141-mt-x64-1_68"
+BOOST_INCLUDE_PATH = includes
+BOOST_LIB_SUFFIX = ""
+BOOST_LIB_PATH = libs
 
 OPENEXR_INCLUDE_PATH = includes
 OIIO_INCLUDE_PATH = includes + "\\OpenImageIO"
@@ -53,6 +46,7 @@ GLEW_LIB_SUFFIX = "32"
 TBB_INCLUDE_PATH = includes
 USD_INCLUDE_PATH = includes
 USD_LIB_PATH = libs
+USD_LIB_PREFIX = "usd_"
 DOXYGEN = deps + "\\doxygen\\doxygen.exe"
 
 # Renderers
diff --git a/SConstruct b/SConstruct
index fafbdb83d..cf5865ae4 100644
--- a/SConstruct
+++ b/SConstruct
@@ -84,10 +84,18 @@ o.Add(
 	"g++" if Environment()["PLATFORM"] != "win32" else "cl",
 )
 
+# Windows : Disable permissive mode, making MSVC more standards compliant.
+# /D_USE_MATH_DEFINES is needed with permissive mode off for
+# common definitions like M_P.
+# /Zc:externC- fixes a compilation error with Boost::interprocess
+# described here:
+# https://developercommunity.visualstudio.com/content/problem/756694/including-windowsh-and-boostinterprocess-headers-l.html
+# /DBOOST_ALL_NO_LIB is needed to find Boost when it is built without
+# verbose system information added to file and directory names.
 o.Add(
 	"CXXFLAGS",
 	"The extra flags to pass to the C++ compiler during compilation.",
-	[ "-pipe", "-Wall", "-Wextra" ] if Environment()["PLATFORM"] != "win32" else [],
+	[ "-pipe", "-Wall", "-Wextra" ] if Environment()["PLATFORM"] != "win32" else [ "/permissive-", "/D_USE_MATH_DEFINES", "/Zc:externC-", "/DBOOST_ALL_NO_LIB" ],
 )
 
 o.Add(
-- 
2.33.1.windows.1

